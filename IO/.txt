Работа с файлами


Разделяется на:
 Взаимодействие с файловой системой: 
 поиск навигация копирование перенос удаление файлов и папок
 использование файлов для хранения информации
	сериализация(сохранение объектоов и их коллекций)


Сохранение информации в файле
большинство средств для работы с файлами находятся в System.IO

StreamWriter - класс для записи в файл

Навигация, поиск, список


!При задании имен файла часто используют @ перед строкой 
@"" - цитирование, строка как есть, не заменяется на спец символы '\n'

"Hell\n" - Hell перевод строки
@"Hell\n" - Hell\n == "Hell\\n"


"C:\users\"

System.IO.File - набор статических методов для работы с файлами
System.IO.Directory - набор статических методов для работы с директориями

Directory.EnumerateFiles возвращает коллекцию имен файлов
Directory.GetFiles возвращает массив имен

Коллекция - следующий элемент извлекается во время запроса
Массив - сразу получает все имена



Сериализация

от англ serial - последовательный 
процесс представления обьекта в виде строки, по которой 
этот объект может быть одноазачно восстановлен
Наиболее распространенные задачи сериализации:

 сохранение
 передача по сети


В С# наиболее популярны следующие технологии:
Бинарная сериализация - устаревшая/не рекомендуется
требует протокола Stream/FileStream
требует атрибута [Serializable] для классов


XML сериализация 
может работать с StreamReader , StreamWriter
сериализует только обьекты public классов
при создании сериализатор привязывается к типу данных,
в файл информация о типе не сохраняется
атрибут Serializable не требуется
НЕ сериализует Dictionary


JSON serialization 
реализована статическими методами
работает со строками, их сохранять / читать нужно отдельно


сераиализует только свойства
в .NET5+ можно включить сериализацию полей
атрибутом  [JsonInclude]
private свойства не сериализуются
сериализует Dictionary





LINQ

Language Integrated Queries
Запросы средствами языка

Есть две формы LINQ : запросы и методы(расширения)


using System.Linq;

LINQ применяется к коллекциям IEnumerable
Методы приемают лямбды или делегаты
параметром метода является элемент коллекции
метод LINQ возвращает новую коллекцию

Ряд методов - теминальные возвращают значние

Регулярные выражения 

Язык работы со строками

проверка по шаблону
поиск и замена
разбиение


Язык на спецсимволах
\d - digit
\D - non digit
\s - space
\S - non space
\w - word
\W - non word
. - один любой символ

[abc] - содержит a b или с
[^abc] - содержит содержит a b или с

{3} - ровно 3
{3,5} - от 3 до 5
{3,} - от 3 и более


\d{3} - 3 цифры подряд 123+ 1234+ 12-

\d+\.\?\d* - одна и более цифр точка есть или нет цифра{0,+бесконечность}
[a-z] - диапазон от а до z;
[0-9a-f] - HEX-цифра

() - границы группы

^ - начало строки
$ - конец строки


















