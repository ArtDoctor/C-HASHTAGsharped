.NET C#
Основы

Новый проект (отличия от С++)

1. using - это аналог using namespace 
(не путать с include)
подключаемые модули делятся на несколько групп:
 Зависимости (DLL)
 Внешние пакеты (NuGet)


2 Пространство имен - Класс статич. Main 
разрешены 2 перегрузки 
Main()
Main(string[] args)


3. Console - класс с функциями консольного окна

--------------------------------

Типы данных
для удобства некоторым типам даны псевдонимы 
int - System.Int32
string - System.String


В С# (.NET) типы данных делятся на значимые(Value) и ссылочные(Reference)
Ссылочные типы ведут себя как указатели в С++
требуется new
может принимать null
при присваивании создается ссылка на тот же объект(семантика переноса)
Пользовательские ссылочные типы создаются через class
Значимые типы:
доступны после объявления (не нужно new)
не можеьт быть null
при присваивании - значения копируются

Пользовательские значимые типы создаются через struct

Вопрос: как себя поведет 
TypeStruct x = new TypeStruct();

а) будет создана "x"
б) будет создана анонимная структура TypeStruct
в) из анонимной структуры все поля скопирются в "x"


TypeClass y = new TypeClass();
а) будет создана переменная "y" как ссылка на TypeClass cо значением null
б) будет создан анонимные класс TypeClass - объект
в) ссылка (адрес) на объект будет сохранена в "y"

