Наследование - тип связи между обьектами,
используется для создания поолиморфизма -
различных реализаций одного интерфейса

Свойства - гибрид поля с аксессором для которого используется операторы =, имя для геттеров
Для создания наследника используется опратор ":"
Родитель может быть только один
наследование по умолчанию public

При обращении к элементам класса рекомендуется	указывать префикс "base" или "this" для снятия неоднозначности


Перегрузка операторов
Так как С# ООП, процедур/ фунуций нет, и все операторы - члены классов 
Реализуются статически - принадлежат классу, но не объекту
в параметрах оператора указываются все "учасники"
В C# некоторые операторы обязательно перегружать парами:

"==" - "!="
"<" - ">"
Особую роль играют индексатооры - перегруженные []
они перегружаются у обьекта

Исключения - механизм управления порядком выполнения кода
позволяющий прервать выполнение и перейти в другую точку
Для изменения порядка выполнения программы исключнения выбрасывают
throw new Exception("Message") 

После исключение будет перехоодить из блока в блок пока не будет поймано 
Если исключение не обработано - то выполнение программы прерывается 
Считается плохим подходом, когда исключение может дойти до верха программы

try{

.....

if(....) throw new type1("Message 1")
if(....) throw new type2("Message 2")
if(....) throw new type3("Message 3")


}
catch(type1 ex){

//обработка исключения 
return;

}
catch(type2 ex){

}
finally{
этот блок выполнится в любом случае даже если в catch есть return
}


